@page "/ShowTableData"
<h3>ShowTableData</h3>

<InputFile @ref="_fileInputRef" id="fileUploader" OnChange="@_HandleFile" style="display:none" />

<Grid TItem="TableDataInfo"
      Class="table table-hover table-bordered table-striped"
      DataProvider="GetTableNameProvider"
      FixedHeader="true"
      AllowPaging="true"
      Responsive="true"
      PageSize="10"
      Unit="Unit.Px">
    <GridColumns>
        <GridColumn TItem="TableDataInfo" HeaderText="TableName">@context.TableName</GridColumn>
    </GridColumns>
    <GridColumns>
        <GridColumn TItem="TableDataInfo" HeaderText="Download">
            <Button Color="ButtonColor.Primary" Size="ButtonSize.Small" @onclick="() => _DownloadCsv(context)">Download</Button>
        </GridColumn>
    </GridColumns>
    <GridColumns>
        <GridColumn TItem="TableDataInfo" HeaderText="Upload">
            <Button Color="ButtonColor.Primary" Size="ButtonSize.Small" @onclick="() => _DataTableUpload(context)">Upload</Button>
        </GridColumn>
    </GridColumns>
</Grid>

@code {
    private async Task<GridDataProviderResult<TableDataInfo>> GetTableNameProvider(GridDataProviderRequest<TableDataInfo> request)
    {
        if (_tableDataList is null)
            _tableDataList = _GetTableDataList();
        
        return await Task.FromResult(request.ApplyTo(_tableDataList));
    }   
}